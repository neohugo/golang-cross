name: CI
on:
  push:
    branches:
      - main
  pull_request_target:

env:
  GO_VERSION:       "1.22.1"
  OSX_SDK:          "MacOSX11.3.sdk.tar.xz"
  OSX_SDK_SUM:      "d25f3b7ff84ddf2c9a87fc0377ee0ef63a25644ac497d3915b428a561a7a64d2"
  OSX_VERSION_MIN:  "11.3"
  OSX_CROSS_COMMIT: "035cc170338b7b252e3f13b0e3ccbf4411bffc41"
  DEBIAN_FRONTEND:  "noninteractive"

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          echo "go_version=${GO_VERSION}" >> $GITHUB_OUTPUT
          echo "osx_sdk=${OSX_SDK}" >> $GITHUB_OUTPUT
          echo "osx_sdk_sum=${OSX_SDK_SUM}" >> $GITHUB_OUTPUT
          echo "osx_version_min=${OSX_VERSION_MIN}" >> $GITHUB_OUTPUT
          echo "osx_cross_commit=${OSX_CROSS_COMMIT}" >> $GITHUB_OUTPUT
          echo "debian_frontend=${DEBIAN_FRONTEND}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            neohugo/golang-cross:latest
            ghcr.io/neohugo/golang-cross:latest
          build-args: |
            GO_VERSION=${{ steps.prep.outputs.go_version }}
            OSX_SDK=${{ steps.prep.outputs.osx_sdk }}
            OSX_SDK_SUM=${{ steps.prep.outputs.osx_sdk_sum }}
            OSX_VERSION_MIN=${{ steps.prep.outputs.osx_version_min }}
            OSX_CROSS_COMMIT=${{ steps.prep.outputs.osx_cross_commit }}
            DEBIAN_FRONTEND=${{ steps.prep.outputs.debian_frontend }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
