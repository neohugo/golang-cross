name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  GO_VERSION:       "1.15.5"
  OSX_SDK:          "MacOSX10.15.sdk"
  OSX_SDK_SUM:      "4051d210bf232ccb5eee863d6a4052afa800001810a2a42e354c9637ec78cd2c"
  OSX_VERSION_MIN:  "10.12"
  OSX_CROSS_COMMIT: "364703ca0962c4a12688daf8758802a5df9e3221"
  DEBIAN_FRONTEND:  "noninteractive"

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          echo ::set-output name=go_version::${GO_VERSION}
          echo ::set-output name=osx_sdk::${OSX_SDK}
          echo ::set-output name=osx_sdk_sum::${OSX_SDK_SUM}
          echo ::set-output name=osx_version_min::${OSX_VERSION_MIN}
          echo ::set-output name=osx_cross_commit::${OSX_CROSS_COMMIT}
          echo ::set-output name=debian_frontend::${DEBIAN_FRONTEND}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and Push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            neohugo/golang-cross:latest
            ghcr.io/neohugo/golang-cross:latest
          build-args: |
            GO_VERSION=${{ steps.prep.outputs.go_version }}
            OSX_SDK=${{ steps.prep.outputs.osx_sdk }}
            OSX_SDK_SUM=${{ steps.prep.outputs.osx_sdk_sum }}
            OSX_VERSION_MIN=${{ steps.prep.outputs.osx_version_min }}
            OSX_CROSS_COMMIT=${{ steps.prep.outputs.osx_cross_commit }}
            DEBIAN_FRONTEND=${{ steps.prep.outputs.debian_frontend }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
